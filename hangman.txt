import java.util.Random;
import java.util.Scanner;

public class HangmanGame {
    public static void main(String[] args) {
        String[] words = {"java", "hangman", "programming", "computer", "algorithm", "developer"};

        // Step 1: Select a random word
        Random random = new Random();
        String selectedWord = words[random.nextInt(words.length)];
        char[] wordToGuess = new char[selectedWord.length()];
        boolean[] guessedLetters = new boolean[26]; // To track guessed letters

        // Initialize wordToGuess with underscores
        for (int i = 0; i < selectedWord.length(); i++) {
            wordToGuess[i] = '_';
        }

        Scanner scanner = new Scanner(System.in);

        int incorrectGuesses = 0;
        int maxIncorrectGuesses = 6; // Maximum incorrect guesses allowed

        // Step 2: Hangman game loop
        while (incorrectGuesses < maxIncorrectGuesses) {
            // Display current state of the word
            System.out.println("Current word: " + new String(wordToGuess));
            System.out.println("Incorrect guesses left: " + (maxIncorrectGuesses - incorrectGuesses));

            // Step 3: Prompt the user for a letter
            System.out.print("Enter a letter: ");
            char guess = scanner.next().toLowerCase().charAt(0);

            // Step 4: Check if the letter is in the word
            boolean validGuess = Character.isLetter(guess) && !guessedLetters[guess - 'a'];

            if (validGuess) {
                guessedLetters[guess - 'a'] = true;

                boolean correctGuess = false;

                for (int i = 0; i < selectedWord.length(); i++) {
                    if (selectedWord.charAt(i) == guess) {
                        wordToGuess[i] = guess;
                        correctGuess = true;
                    }
                }

                // Check if the word is guessed
                if (new String(wordToGuess).equals(selectedWord)) {
                    System.out.println("Congratulations! You guessed the word: " + selectedWord);
                    break;
                }

                if (!correctGuess) {
                    incorrectGuesses++;
                    displayHangman(incorrectGuesses);
                }
            } else {
                System.out.println("Invalid guess. Please enter a valid letter.");
            }
        }

        // Game over
        if (incorrectGuesses == maxIncorrectGuesses) {
            System.out.println("Sorry, you ran out of guesses. The word was: " + selectedWord);
        }

        // Close the scanner
        scanner.close();
    }

    // Helper method to display the hangman figure based on incorrect guesses
    private static void displayHangman(int incorrectGuesses) {
        String[] hangmanFigures = {
            "  +---+\n  |   |\n      |\n      |\n      |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n      |\n      |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n  |   |\n      |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n /|   |\n      |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n /|\\  |\n      |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n /|\\  |\n /    |\n      |\n=========",
            "  +---+\n  |   |\n  O   |\n /|\\  |\n / \\  |\n      |\n========="
        };

        System.out.println(hangmanFigures[incorrectGuesses]);
    }
}
